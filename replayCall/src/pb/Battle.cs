// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: battle.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Replay {

  /// <summary>Holder for reflection information generated from battle.proto</summary>
  public static partial class BattleReflection {

    #region Descriptor
    /// <summary>File descriptor for battle.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BattleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxiYXR0bGUucHJvdG8SA3NyYyIkCgZCYXR0bGUSGgoGZnJhbWVzGAEgAygL",
            "Mgouc3JjLkZyYW1lIjAKBUZyYW1lEg0KBUluZGV4GAEgASgFEhgKBWNhbGxz",
            "GAIgAygLMgkuc3JjLkNhbGwiKgoEQ2FsbBIQCghmdW5jTmFtZRgCIAEoCRIQ",
            "CghmdW5jQXJncxgDIAEoDCInCgRQb3MzEgkKAXgYASABKAISCQoBeRgCIAEo",
            "AhIJCgF6GAMgASgCIkcKFUVudGl0eVNob3dJbmZPbk1vdmVUbxITCgtyZWNl",
            "aXZlclRhZxgBIAEoBRIZCgZhcmdQb3MYAiABKAsyCS5zcmMuUG9zMyIuChdF",
            "bnRpdHlTaG93SW5mT25TdG9wTW92ZRITCgtyZWNlaXZlclRhZxgBIAEoBSJE",
            "ChdFbnRpdHlTaG93SW5mT25IUENoYW5nZRITCgtyZWNlaXZlclRhZxgBIAEo",
            "BRIUCgxhcmdIUFBlcmNlbnQYAiABKAIiVgoYRW50aXR5U2hvd0luZk9uQ2Fz",
            "dFNraWxsEhMKC3JlY2VpdmVyVGFnGAEgASgFEhIKCmFyZ1NraWxsSUQYAiAB",
            "KAUSEQoJYXJnVGFyZ2V0GAMgASgFIikKEkVudGl0eVNob3dJbmZPbkhpdBIT",
            "CgtyZWNlaXZlclRhZxgBIAEoBSI/ChVFbnRpdHlTaG93SW5mT25EYW1hZ2US",
            "EwoLcmVjZWl2ZXJUYWcYASABKAUSEQoJYXJnRGFtYWdlGAIgASgFIjsKE0Vu",
            "dGl0eVNob3dJbmZPbkhlYWwSEwoLcmVjZWl2ZXJUYWcYASABKAUSDwoHYXJn",
            "SGVhbBgCIAEoBSIpChJFbnRpdHlTaG93SW5mT25EaWUSEwoLcmVjZWl2ZXJU",
            "YWcYASABKAVCCaoCBlJlcGxheWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Replay.Battle), global::Replay.Battle.Parser, new[]{ "Frames" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Replay.Frame), global::Replay.Frame.Parser, new[]{ "Index", "Calls" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Replay.Call), global::Replay.Call.Parser, new[]{ "FuncName", "FuncArgs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Replay.Pos3), global::Replay.Pos3.Parser, new[]{ "X", "Y", "Z" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Replay.EntityShowInfOnMoveTo), global::Replay.EntityShowInfOnMoveTo.Parser, new[]{ "ReceiverTag", "ArgPos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Replay.EntityShowInfOnStopMove), global::Replay.EntityShowInfOnStopMove.Parser, new[]{ "ReceiverTag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Replay.EntityShowInfOnHPChange), global::Replay.EntityShowInfOnHPChange.Parser, new[]{ "ReceiverTag", "ArgHPPercent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Replay.EntityShowInfOnCastSkill), global::Replay.EntityShowInfOnCastSkill.Parser, new[]{ "ReceiverTag", "ArgSkillID", "ArgTarget" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Replay.EntityShowInfOnHit), global::Replay.EntityShowInfOnHit.Parser, new[]{ "ReceiverTag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Replay.EntityShowInfOnDamage), global::Replay.EntityShowInfOnDamage.Parser, new[]{ "ReceiverTag", "ArgDamage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Replay.EntityShowInfOnHeal), global::Replay.EntityShowInfOnHeal.Parser, new[]{ "ReceiverTag", "ArgHeal" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Replay.EntityShowInfOnDie), global::Replay.EntityShowInfOnDie.Parser, new[]{ "ReceiverTag" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Battle : pb::IMessage<Battle> {
    private static readonly pb::MessageParser<Battle> _parser = new pb::MessageParser<Battle>(() => new Battle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Battle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Replay.BattleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Battle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Battle(Battle other) : this() {
      frames_ = other.frames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Battle Clone() {
      return new Battle(this);
    }

    /// <summary>Field number for the "frames" field.</summary>
    public const int FramesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Replay.Frame> _repeated_frames_codec
        = pb::FieldCodec.ForMessage(10, global::Replay.Frame.Parser);
    private readonly pbc::RepeatedField<global::Replay.Frame> frames_ = new pbc::RepeatedField<global::Replay.Frame>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Replay.Frame> Frames {
      get { return frames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Battle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Battle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!frames_.Equals(other.frames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= frames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      frames_.WriteTo(output, _repeated_frames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += frames_.CalculateSize(_repeated_frames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Battle other) {
      if (other == null) {
        return;
      }
      frames_.Add(other.frames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            frames_.AddEntriesFrom(input, _repeated_frames_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Frame : pb::IMessage<Frame> {
    private static readonly pb::MessageParser<Frame> _parser = new pb::MessageParser<Frame>(() => new Frame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Frame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Replay.BattleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Frame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Frame(Frame other) : this() {
      index_ = other.index_;
      calls_ = other.calls_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Frame Clone() {
      return new Frame(this);
    }

    /// <summary>Field number for the "Index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "calls" field.</summary>
    public const int CallsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Replay.Call> _repeated_calls_codec
        = pb::FieldCodec.ForMessage(18, global::Replay.Call.Parser);
    private readonly pbc::RepeatedField<global::Replay.Call> calls_ = new pbc::RepeatedField<global::Replay.Call>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Replay.Call> Calls {
      get { return calls_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Frame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Frame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if(!calls_.Equals(other.calls_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      hash ^= calls_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      calls_.WriteTo(output, _repeated_calls_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      size += calls_.CalculateSize(_repeated_calls_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Frame other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      calls_.Add(other.calls_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 18: {
            calls_.AddEntriesFrom(input, _repeated_calls_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Call : pb::IMessage<Call> {
    private static readonly pb::MessageParser<Call> _parser = new pb::MessageParser<Call>(() => new Call());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Call> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Replay.BattleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Call() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Call(Call other) : this() {
      funcName_ = other.funcName_;
      funcArgs_ = other.funcArgs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Call Clone() {
      return new Call(this);
    }

    /// <summary>Field number for the "funcName" field.</summary>
    public const int FuncNameFieldNumber = 2;
    private string funcName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FuncName {
      get { return funcName_; }
      set {
        funcName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "funcArgs" field.</summary>
    public const int FuncArgsFieldNumber = 3;
    private pb::ByteString funcArgs_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FuncArgs {
      get { return funcArgs_; }
      set {
        funcArgs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Call);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Call other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FuncName != other.FuncName) return false;
      if (FuncArgs != other.FuncArgs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FuncName.Length != 0) hash ^= FuncName.GetHashCode();
      if (FuncArgs.Length != 0) hash ^= FuncArgs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FuncName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FuncName);
      }
      if (FuncArgs.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(FuncArgs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FuncName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FuncName);
      }
      if (FuncArgs.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FuncArgs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Call other) {
      if (other == null) {
        return;
      }
      if (other.FuncName.Length != 0) {
        FuncName = other.FuncName;
      }
      if (other.FuncArgs.Length != 0) {
        FuncArgs = other.FuncArgs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            FuncName = input.ReadString();
            break;
          }
          case 26: {
            FuncArgs = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Pos3 : pb::IMessage<Pos3> {
    private static readonly pb::MessageParser<Pos3> _parser = new pb::MessageParser<Pos3>(() => new Pos3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pos3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Replay.BattleReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pos3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pos3(Pos3 other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pos3 Clone() {
      return new Pos3(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pos3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pos3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pos3 other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EntityShowInfOnMoveTo : pb::IMessage<EntityShowInfOnMoveTo> {
    private static readonly pb::MessageParser<EntityShowInfOnMoveTo> _parser = new pb::MessageParser<EntityShowInfOnMoveTo>(() => new EntityShowInfOnMoveTo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityShowInfOnMoveTo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Replay.BattleReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnMoveTo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnMoveTo(EntityShowInfOnMoveTo other) : this() {
      receiverTag_ = other.receiverTag_;
      ArgPos = other.argPos_ != null ? other.ArgPos.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnMoveTo Clone() {
      return new EntityShowInfOnMoveTo(this);
    }

    /// <summary>Field number for the "receiverTag" field.</summary>
    public const int ReceiverTagFieldNumber = 1;
    private int receiverTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReceiverTag {
      get { return receiverTag_; }
      set {
        receiverTag_ = value;
      }
    }

    /// <summary>Field number for the "argPos" field.</summary>
    public const int ArgPosFieldNumber = 2;
    private global::Replay.Pos3 argPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Replay.Pos3 ArgPos {
      get { return argPos_; }
      set {
        argPos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityShowInfOnMoveTo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityShowInfOnMoveTo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceiverTag != other.ReceiverTag) return false;
      if (!object.Equals(ArgPos, other.ArgPos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReceiverTag != 0) hash ^= ReceiverTag.GetHashCode();
      if (argPos_ != null) hash ^= ArgPos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReceiverTag != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReceiverTag);
      }
      if (argPos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ArgPos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReceiverTag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReceiverTag);
      }
      if (argPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArgPos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityShowInfOnMoveTo other) {
      if (other == null) {
        return;
      }
      if (other.ReceiverTag != 0) {
        ReceiverTag = other.ReceiverTag;
      }
      if (other.argPos_ != null) {
        if (argPos_ == null) {
          argPos_ = new global::Replay.Pos3();
        }
        ArgPos.MergeFrom(other.ArgPos);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReceiverTag = input.ReadInt32();
            break;
          }
          case 18: {
            if (argPos_ == null) {
              argPos_ = new global::Replay.Pos3();
            }
            input.ReadMessage(argPos_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EntityShowInfOnStopMove : pb::IMessage<EntityShowInfOnStopMove> {
    private static readonly pb::MessageParser<EntityShowInfOnStopMove> _parser = new pb::MessageParser<EntityShowInfOnStopMove>(() => new EntityShowInfOnStopMove());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityShowInfOnStopMove> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Replay.BattleReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnStopMove() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnStopMove(EntityShowInfOnStopMove other) : this() {
      receiverTag_ = other.receiverTag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnStopMove Clone() {
      return new EntityShowInfOnStopMove(this);
    }

    /// <summary>Field number for the "receiverTag" field.</summary>
    public const int ReceiverTagFieldNumber = 1;
    private int receiverTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReceiverTag {
      get { return receiverTag_; }
      set {
        receiverTag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityShowInfOnStopMove);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityShowInfOnStopMove other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceiverTag != other.ReceiverTag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReceiverTag != 0) hash ^= ReceiverTag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReceiverTag != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReceiverTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReceiverTag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReceiverTag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityShowInfOnStopMove other) {
      if (other == null) {
        return;
      }
      if (other.ReceiverTag != 0) {
        ReceiverTag = other.ReceiverTag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReceiverTag = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EntityShowInfOnHPChange : pb::IMessage<EntityShowInfOnHPChange> {
    private static readonly pb::MessageParser<EntityShowInfOnHPChange> _parser = new pb::MessageParser<EntityShowInfOnHPChange>(() => new EntityShowInfOnHPChange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityShowInfOnHPChange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Replay.BattleReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnHPChange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnHPChange(EntityShowInfOnHPChange other) : this() {
      receiverTag_ = other.receiverTag_;
      argHPPercent_ = other.argHPPercent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnHPChange Clone() {
      return new EntityShowInfOnHPChange(this);
    }

    /// <summary>Field number for the "receiverTag" field.</summary>
    public const int ReceiverTagFieldNumber = 1;
    private int receiverTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReceiverTag {
      get { return receiverTag_; }
      set {
        receiverTag_ = value;
      }
    }

    /// <summary>Field number for the "argHPPercent" field.</summary>
    public const int ArgHPPercentFieldNumber = 2;
    private float argHPPercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ArgHPPercent {
      get { return argHPPercent_; }
      set {
        argHPPercent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityShowInfOnHPChange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityShowInfOnHPChange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceiverTag != other.ReceiverTag) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ArgHPPercent, other.ArgHPPercent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReceiverTag != 0) hash ^= ReceiverTag.GetHashCode();
      if (ArgHPPercent != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ArgHPPercent);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReceiverTag != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReceiverTag);
      }
      if (ArgHPPercent != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(ArgHPPercent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReceiverTag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReceiverTag);
      }
      if (ArgHPPercent != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityShowInfOnHPChange other) {
      if (other == null) {
        return;
      }
      if (other.ReceiverTag != 0) {
        ReceiverTag = other.ReceiverTag;
      }
      if (other.ArgHPPercent != 0F) {
        ArgHPPercent = other.ArgHPPercent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReceiverTag = input.ReadInt32();
            break;
          }
          case 21: {
            ArgHPPercent = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EntityShowInfOnCastSkill : pb::IMessage<EntityShowInfOnCastSkill> {
    private static readonly pb::MessageParser<EntityShowInfOnCastSkill> _parser = new pb::MessageParser<EntityShowInfOnCastSkill>(() => new EntityShowInfOnCastSkill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityShowInfOnCastSkill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Replay.BattleReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnCastSkill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnCastSkill(EntityShowInfOnCastSkill other) : this() {
      receiverTag_ = other.receiverTag_;
      argSkillID_ = other.argSkillID_;
      argTarget_ = other.argTarget_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnCastSkill Clone() {
      return new EntityShowInfOnCastSkill(this);
    }

    /// <summary>Field number for the "receiverTag" field.</summary>
    public const int ReceiverTagFieldNumber = 1;
    private int receiverTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReceiverTag {
      get { return receiverTag_; }
      set {
        receiverTag_ = value;
      }
    }

    /// <summary>Field number for the "argSkillID" field.</summary>
    public const int ArgSkillIDFieldNumber = 2;
    private int argSkillID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ArgSkillID {
      get { return argSkillID_; }
      set {
        argSkillID_ = value;
      }
    }

    /// <summary>Field number for the "argTarget" field.</summary>
    public const int ArgTargetFieldNumber = 3;
    private int argTarget_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ArgTarget {
      get { return argTarget_; }
      set {
        argTarget_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityShowInfOnCastSkill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityShowInfOnCastSkill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceiverTag != other.ReceiverTag) return false;
      if (ArgSkillID != other.ArgSkillID) return false;
      if (ArgTarget != other.ArgTarget) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReceiverTag != 0) hash ^= ReceiverTag.GetHashCode();
      if (ArgSkillID != 0) hash ^= ArgSkillID.GetHashCode();
      if (ArgTarget != 0) hash ^= ArgTarget.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReceiverTag != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReceiverTag);
      }
      if (ArgSkillID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ArgSkillID);
      }
      if (ArgTarget != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ArgTarget);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReceiverTag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReceiverTag);
      }
      if (ArgSkillID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ArgSkillID);
      }
      if (ArgTarget != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ArgTarget);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityShowInfOnCastSkill other) {
      if (other == null) {
        return;
      }
      if (other.ReceiverTag != 0) {
        ReceiverTag = other.ReceiverTag;
      }
      if (other.ArgSkillID != 0) {
        ArgSkillID = other.ArgSkillID;
      }
      if (other.ArgTarget != 0) {
        ArgTarget = other.ArgTarget;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReceiverTag = input.ReadInt32();
            break;
          }
          case 16: {
            ArgSkillID = input.ReadInt32();
            break;
          }
          case 24: {
            ArgTarget = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EntityShowInfOnHit : pb::IMessage<EntityShowInfOnHit> {
    private static readonly pb::MessageParser<EntityShowInfOnHit> _parser = new pb::MessageParser<EntityShowInfOnHit>(() => new EntityShowInfOnHit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityShowInfOnHit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Replay.BattleReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnHit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnHit(EntityShowInfOnHit other) : this() {
      receiverTag_ = other.receiverTag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnHit Clone() {
      return new EntityShowInfOnHit(this);
    }

    /// <summary>Field number for the "receiverTag" field.</summary>
    public const int ReceiverTagFieldNumber = 1;
    private int receiverTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReceiverTag {
      get { return receiverTag_; }
      set {
        receiverTag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityShowInfOnHit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityShowInfOnHit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceiverTag != other.ReceiverTag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReceiverTag != 0) hash ^= ReceiverTag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReceiverTag != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReceiverTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReceiverTag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReceiverTag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityShowInfOnHit other) {
      if (other == null) {
        return;
      }
      if (other.ReceiverTag != 0) {
        ReceiverTag = other.ReceiverTag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReceiverTag = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EntityShowInfOnDamage : pb::IMessage<EntityShowInfOnDamage> {
    private static readonly pb::MessageParser<EntityShowInfOnDamage> _parser = new pb::MessageParser<EntityShowInfOnDamage>(() => new EntityShowInfOnDamage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityShowInfOnDamage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Replay.BattleReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnDamage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnDamage(EntityShowInfOnDamage other) : this() {
      receiverTag_ = other.receiverTag_;
      argDamage_ = other.argDamage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnDamage Clone() {
      return new EntityShowInfOnDamage(this);
    }

    /// <summary>Field number for the "receiverTag" field.</summary>
    public const int ReceiverTagFieldNumber = 1;
    private int receiverTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReceiverTag {
      get { return receiverTag_; }
      set {
        receiverTag_ = value;
      }
    }

    /// <summary>Field number for the "argDamage" field.</summary>
    public const int ArgDamageFieldNumber = 2;
    private int argDamage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ArgDamage {
      get { return argDamage_; }
      set {
        argDamage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityShowInfOnDamage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityShowInfOnDamage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceiverTag != other.ReceiverTag) return false;
      if (ArgDamage != other.ArgDamage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReceiverTag != 0) hash ^= ReceiverTag.GetHashCode();
      if (ArgDamage != 0) hash ^= ArgDamage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReceiverTag != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReceiverTag);
      }
      if (ArgDamage != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ArgDamage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReceiverTag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReceiverTag);
      }
      if (ArgDamage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ArgDamage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityShowInfOnDamage other) {
      if (other == null) {
        return;
      }
      if (other.ReceiverTag != 0) {
        ReceiverTag = other.ReceiverTag;
      }
      if (other.ArgDamage != 0) {
        ArgDamage = other.ArgDamage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReceiverTag = input.ReadInt32();
            break;
          }
          case 16: {
            ArgDamage = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EntityShowInfOnHeal : pb::IMessage<EntityShowInfOnHeal> {
    private static readonly pb::MessageParser<EntityShowInfOnHeal> _parser = new pb::MessageParser<EntityShowInfOnHeal>(() => new EntityShowInfOnHeal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityShowInfOnHeal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Replay.BattleReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnHeal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnHeal(EntityShowInfOnHeal other) : this() {
      receiverTag_ = other.receiverTag_;
      argHeal_ = other.argHeal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnHeal Clone() {
      return new EntityShowInfOnHeal(this);
    }

    /// <summary>Field number for the "receiverTag" field.</summary>
    public const int ReceiverTagFieldNumber = 1;
    private int receiverTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReceiverTag {
      get { return receiverTag_; }
      set {
        receiverTag_ = value;
      }
    }

    /// <summary>Field number for the "argHeal" field.</summary>
    public const int ArgHealFieldNumber = 2;
    private int argHeal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ArgHeal {
      get { return argHeal_; }
      set {
        argHeal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityShowInfOnHeal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityShowInfOnHeal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceiverTag != other.ReceiverTag) return false;
      if (ArgHeal != other.ArgHeal) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReceiverTag != 0) hash ^= ReceiverTag.GetHashCode();
      if (ArgHeal != 0) hash ^= ArgHeal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReceiverTag != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReceiverTag);
      }
      if (ArgHeal != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ArgHeal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReceiverTag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReceiverTag);
      }
      if (ArgHeal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ArgHeal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityShowInfOnHeal other) {
      if (other == null) {
        return;
      }
      if (other.ReceiverTag != 0) {
        ReceiverTag = other.ReceiverTag;
      }
      if (other.ArgHeal != 0) {
        ArgHeal = other.ArgHeal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReceiverTag = input.ReadInt32();
            break;
          }
          case 16: {
            ArgHeal = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EntityShowInfOnDie : pb::IMessage<EntityShowInfOnDie> {
    private static readonly pb::MessageParser<EntityShowInfOnDie> _parser = new pb::MessageParser<EntityShowInfOnDie>(() => new EntityShowInfOnDie());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityShowInfOnDie> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Replay.BattleReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnDie() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnDie(EntityShowInfOnDie other) : this() {
      receiverTag_ = other.receiverTag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityShowInfOnDie Clone() {
      return new EntityShowInfOnDie(this);
    }

    /// <summary>Field number for the "receiverTag" field.</summary>
    public const int ReceiverTagFieldNumber = 1;
    private int receiverTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReceiverTag {
      get { return receiverTag_; }
      set {
        receiverTag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityShowInfOnDie);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityShowInfOnDie other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceiverTag != other.ReceiverTag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReceiverTag != 0) hash ^= ReceiverTag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReceiverTag != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReceiverTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReceiverTag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReceiverTag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityShowInfOnDie other) {
      if (other == null) {
        return;
      }
      if (other.ReceiverTag != 0) {
        ReceiverTag = other.ReceiverTag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReceiverTag = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
